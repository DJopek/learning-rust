use num_bigint::{BigInt, ToBigInt};

fn main() {

    let p: BigInt = "18704747291727405005332096849116862064480486059404122790498867761970007255985880891672356715786639382693994562611525278049730856358705886565946192318915780118452547219328833309595556003479096119577256583299941164986882912817189555410393825891234546360599731930082551839559768496658982803895710976702823112955197133837332281801758660008203770514299754145618228817054825557059004775220794381983161723147044328874640680697519258525908217217502704592136349564181541143297496694680862430195171958703305417008113909431403586728659421356027910826190143800553833164666732326281504092366672651813513255026195104299028180259231".parse().unwrap();
    
    let mut a_n_1: Vec<BigInt> = vec![0.to_bigint().unwrap(), 0.to_bigint().unwrap()];
    let mut a_n: Vec<BigInt> = vec![1.to_bigint().unwrap()];

    for i in 0..1000 {
    
        let x = (a_n[i].clone() + a_n_1[i].clone()) % &p;
    
        a_n_1.push(x.clone());
        a_n.push(x.clone());
    
        let i_plus_1 = i + 1;
    
        println!("{i_plus_1}. ƒçlen Fibonacciho postupnosti: {x}");
    
    }
}